/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AccountIdRouteRouteImport } from './routes/$accountId/route'
import { Route as IndexRouteRouteImport } from './routes/index/route'
import { Route as AccountIdIndexRouteImport } from './routes/$accountId/index'
import { Route as AccountIdChatRouteRouteImport } from './routes/$accountId/chat/route'
import { Route as AccountIdChatIndexRouteImport } from './routes/$accountId/chat/index'
import { Route as AccountIdChatChatIdRouteImport } from './routes/$accountId/chat/$chatId'

const AccountIdRouteRoute = AccountIdRouteRouteImport.update({
  id: '/$accountId',
  path: '/$accountId',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRouteRoute = IndexRouteRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountIdIndexRoute = AccountIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountIdRouteRoute,
} as any)
const AccountIdChatRouteRoute = AccountIdChatRouteRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AccountIdRouteRoute,
} as any)
const AccountIdChatIndexRoute = AccountIdChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountIdChatRouteRoute,
} as any)
const AccountIdChatChatIdRoute = AccountIdChatChatIdRouteImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => AccountIdChatRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/$accountId': typeof AccountIdRouteRouteWithChildren
  '/$accountId/chat': typeof AccountIdChatRouteRouteWithChildren
  '/$accountId/': typeof AccountIdIndexRoute
  '/$accountId/chat/$chatId': typeof AccountIdChatChatIdRoute
  '/$accountId/chat/': typeof AccountIdChatIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/$accountId': typeof AccountIdIndexRoute
  '/$accountId/chat/$chatId': typeof AccountIdChatChatIdRoute
  '/$accountId/chat': typeof AccountIdChatIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRouteRoute
  '/$accountId': typeof AccountIdRouteRouteWithChildren
  '/$accountId/chat': typeof AccountIdChatRouteRouteWithChildren
  '/$accountId/': typeof AccountIdIndexRoute
  '/$accountId/chat/$chatId': typeof AccountIdChatChatIdRoute
  '/$accountId/chat/': typeof AccountIdChatIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$accountId'
    | '/$accountId/chat'
    | '/$accountId/'
    | '/$accountId/chat/$chatId'
    | '/$accountId/chat/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$accountId' | '/$accountId/chat/$chatId' | '/$accountId/chat'
  id:
    | '__root__'
    | '/'
    | '/$accountId'
    | '/$accountId/chat'
    | '/$accountId/'
    | '/$accountId/chat/$chatId'
    | '/$accountId/chat/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  AccountIdRouteRoute: typeof AccountIdRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$accountId': {
      id: '/$accountId'
      path: '/$accountId'
      fullPath: '/$accountId'
      preLoaderRoute: typeof AccountIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$accountId/': {
      id: '/$accountId/'
      path: '/'
      fullPath: '/$accountId/'
      preLoaderRoute: typeof AccountIdIndexRouteImport
      parentRoute: typeof AccountIdRouteRoute
    }
    '/$accountId/chat': {
      id: '/$accountId/chat'
      path: '/chat'
      fullPath: '/$accountId/chat'
      preLoaderRoute: typeof AccountIdChatRouteRouteImport
      parentRoute: typeof AccountIdRouteRoute
    }
    '/$accountId/chat/': {
      id: '/$accountId/chat/'
      path: '/'
      fullPath: '/$accountId/chat/'
      preLoaderRoute: typeof AccountIdChatIndexRouteImport
      parentRoute: typeof AccountIdChatRouteRoute
    }
    '/$accountId/chat/$chatId': {
      id: '/$accountId/chat/$chatId'
      path: '/$chatId'
      fullPath: '/$accountId/chat/$chatId'
      preLoaderRoute: typeof AccountIdChatChatIdRouteImport
      parentRoute: typeof AccountIdChatRouteRoute
    }
  }
}

interface AccountIdChatRouteRouteChildren {
  AccountIdChatChatIdRoute: typeof AccountIdChatChatIdRoute
  AccountIdChatIndexRoute: typeof AccountIdChatIndexRoute
}

const AccountIdChatRouteRouteChildren: AccountIdChatRouteRouteChildren = {
  AccountIdChatChatIdRoute: AccountIdChatChatIdRoute,
  AccountIdChatIndexRoute: AccountIdChatIndexRoute,
}

const AccountIdChatRouteRouteWithChildren =
  AccountIdChatRouteRoute._addFileChildren(AccountIdChatRouteRouteChildren)

interface AccountIdRouteRouteChildren {
  AccountIdChatRouteRoute: typeof AccountIdChatRouteRouteWithChildren
  AccountIdIndexRoute: typeof AccountIdIndexRoute
}

const AccountIdRouteRouteChildren: AccountIdRouteRouteChildren = {
  AccountIdChatRouteRoute: AccountIdChatRouteRouteWithChildren,
  AccountIdIndexRoute: AccountIdIndexRoute,
}

const AccountIdRouteRouteWithChildren = AccountIdRouteRoute._addFileChildren(
  AccountIdRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  AccountIdRouteRoute: AccountIdRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
